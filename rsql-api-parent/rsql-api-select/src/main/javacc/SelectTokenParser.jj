/*
* MIT License
*
* Copyright (c) 2016 John Michael Vincent S. Rustia
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in all
* copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
*/
options {
    LOOKAHEAD = 1;
    CHOICE_AMBIGUITY_CHECK = 3;
    OTHER_AMBIGUITY_CHECK = 2;
    STATIC = false;
    DEBUG_PARSER = false;
    DEBUG_LOOKAHEAD = false;
    DEBUG_TOKEN_MANAGER = false;
    UNICODE_INPUT = true;
    SUPPORT_CLASS_VISIBILITY_PUBLIC = false;
}
PARSER_BEGIN(SelectTokenParser)
package com.github.vineey.rql.select.parser.ast;
import java.util.List;
import java.util.ArrayList;
final class SelectTokenParser {
}
PARSER_END(SelectTokenParser)

SKIP : {" " | "\t"}
TOKEN : { < SELECT : "select" >}
TOKEN : {
          < LEFTPAREN : "(" >
        | < RIGHTPAREN : ")" >
        }
TOKEN : { < #ALPHA : ["a"-"z", "A"-"Z"] >}
TOKEN : { < #DOT : "." >}
TOKEN : { < FIELD : (<ALPHA>)+(<DOT>(<ALPHA>)+)* >}
TOKEN : { < COMMA : "," > }
List parse() :
{
    List<String> fields = new ArrayList<String>() ;
    String field;
}
{
    <SELECT>
    <LEFTPAREN>
    field = field() { fields.add(field);}
    (<COMMA> field = field() { fields.add(field);})*
    <RIGHTPAREN>
    <EOF>
    {return fields;}
}

String field() :
{
  Token t ;
  final String field;
 }
{
   t = <FIELD> {  field = t.image; }

  { return field; }
}